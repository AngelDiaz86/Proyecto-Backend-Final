openapi: 3.0.1
info:
  title: "Orders API"
  version: "1.0.0"
paths:
  /api/orders:
    get:
      summary: Get orders
      description: Returns a list of orders
      responses:
        '200':
          description: Order List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Create order
      description: Create new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Mistake
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/orders/{id}:
    put:
      summary: Update order
      description: Update an existing order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    delete:
      summary: Delete order
      description: Delete an existing order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Successfully removed

components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        productId:
          type: integer
          example: 1
        unitPrice:
          type: number
          format: double
          example: 310.10
        quantity:
          type: integer
          example: 5
        total:
          type: number
          format: double
          example: 100.0
        date:
          type: string
          format: date
          example: "2024-06-27"
        notes:
          type: string
          example: "Description"

